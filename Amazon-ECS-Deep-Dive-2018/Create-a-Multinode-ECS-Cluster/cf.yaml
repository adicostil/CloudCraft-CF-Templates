AWSTemplateFormatVersion: "2010-09-09"

Description: >
    Creating a Multi-Node ECS Cluster. The student is expected to create the
    cluster in the AWS Management Console and deploy additional EC2 instances
    into the VPC and join them to the ECS cluster.

Resources:
  # VPC:
  #   Type: "AWS::EC2::VPC"
  #   Properties:
  #     CidrBlock: "10.99.0.0/16"
  #     EnableDnsHostnames: true
  #     EnableDnsSupport: true
  #     Tags:
  #      - Key: "Name"
  #        Value: "ECSVPC"

  # InternetGateway:
  #   Type: "AWS::EC2::InternetGateway"
  #   Properties: {}

  # VPCGatewayAttachment:
  #   Type: "AWS::EC2::VPCGatewayAttachment"
  #   Properties:
  #     VpcId: !Ref VPC
  #     InternetGatewayId: !Ref InternetGateway

  # DMZ:
  #   Type: "AWS::EC2::Subnet"
  #   Properties:
  #     AvailabilityZone: !Select
  #       - 0
  #       - !GetAZs
  #     CidrBlock: "10.99.1.0/24"
  #     VpcId: !Ref VPC
  #     Tags:
  #     - Key: Name
  #       Value: DMZ

  # PublicRT:
  #   Type: "AWS::EC2::RouteTable"
  #   Properties:
  #     VpcId: !Ref VPC
  #     Tags:
  #       - Key: Name
  #         Value: PublicRT

  # RouteTableAssociation:
  #   Type: "AWS::EC2::SubnetRouteTableAssociation"
  #   Properties:
  #     SubnetId: !Ref DMZ
  #     RouteTableId: !Ref PublicRT

  # RoutePublicNATToInternet:
  #   Type: "AWS::EC2::Route"
  #   Properties:
  #     RouteTableId: !Ref PublicRT
  #     DestinationCidrBlock: "0.0.0.0/0"
  #     GatewayId: !Ref InternetGateway
  #   DependsOn: VPCGatewayAttachment

  # DMZNACL:
  #   Type: "AWS::EC2::NetworkAcl"
  #   Properties:
  #     VpcId: !Ref VPC
  #     Tags:
  #       - Key: Name
  #         Value: DMZNACL

  # SubnetNetworkAclAssociationA:
  #   Type: "AWS::EC2::SubnetNetworkAclAssociation"
  #   Properties:
  #     SubnetId: !Ref DMZ
  #     NetworkAclId: !Ref DMZNACL

  # DMZNACLEntryIngress100:
  #   Type: "AWS::EC2::NetworkAclEntry"
  #   DependsOn: DMZNACL
  #   Properties:
  #     NetworkAclId: !Ref DMZNACL
  #     RuleNumber: 100
  #     Protocol: 6
  #     PortRange:
  #       From: 22
  #       To: 22
  #     RuleAction: allow
  #     Egress: false
  #     CidrBlock: "0.0.0.0/0"

  # DMZNACLEntryIngress110:
  #   Type: "AWS::EC2::NetworkAclEntry"
  #   DependsOn: DMZNACL
  #   Properties:
  #     NetworkAclId: !Ref DMZNACL
  #     RuleNumber: 110
  #     Protocol: 6
  #     PortRange:
  #       From: 1024
  #       To: 65535
  #     RuleAction: "allow"
  #     Egress: false
  #     CidrBlock: "0.0.0.0/0"

  # DMZNACLEntryEgress100:
  #   Type: "AWS::EC2::NetworkAclEntry"
  #   DependsOn: DMZNACL
  #   Properties:
  #     NetworkAclId: !Ref DMZNACL
  #     RuleNumber: 100
  #     Protocol: 6
  #     PortRange:
  #       From: 22
  #       To: 22
  #     RuleAction: "allow"
  #     Egress: true
  #     CidrBlock: "0.0.0.0/0"

  # DMZNACLEntryEgress110:
  #   Type: "AWS::EC2::NetworkAclEntry"
  #   DependsOn: DMZNACL
  #   Properties:
  #     NetworkAclId: !Ref DMZNACL
  #     RuleNumber: 110
  #     Protocol: 6
  #     PortRange:
  #       From: 1024
  #       To: 65535
  #     RuleAction: "allow"
  #     Egress: true
  #     CidrBlock: "0.0.0.0/0"

  # DMZNACLEntryEgress120:
  #   Type: "AWS::EC2::NetworkAclEntry"
  #   DependsOn: DMZNACL
  #   Properties:
  #     NetworkAclId: !Ref DMZNACL
  #     RuleNumber: 120
  #     Protocol: 6
  #     PortRange:
  #       From: 80
  #       To: 80
  #     RuleAction: "allow"
  #     Egress: true
  #     CidrBlock: "0.0.0.0/0"

  # DMZNACLEntryEgress130:
  #   Type: "AWS::EC2::NetworkAclEntry"
  #   DependsOn: DMZNACL
  #   Properties:
  #     NetworkAclId: !Ref DMZNACL
  #     RuleNumber: 130
  #     Protocol: 6
  #     PortRange:
  #       From: 443
  #       To: 443
  #     RuleAction: "allow"
  #     Egress: true
  #     CidrBlock: "0.0.0.0/0"

  # InstanceSecurityGroup:
  #   Type: "AWS::EC2::SecurityGroup"
  #   Properties:
  #     GroupDescription: "InstanceSG"
  #     VpcId: !Ref VPC
  #     Tags:
  #       - Key: Name
  #         Value: InstanceSG
  #     SecurityGroupIngress:
  #       - CidrIp: "0.0.0.0/0"
  #         FromPort: 22
  #         IpProtocol: "tcp"
  #         ToPort: 22

  # BastionInstance:
  #   Type: AWS::EC2::Instance
  #   Properties:
  #     ImageId: '%ami-43%' # ami-14c5486b
  #     InstanceType: t2.micro
  #     Tags:
  #       - Key: Application
  #         Value: !Ref 'AWS::StackId'
  #       - Key: Name
  #         Value: 'bastion'
  #     NetworkInterfaces:
  #       - GroupSet:
  #           - !Ref InstanceSecurityGroup
  #         AssociatePublicIpAddress: true
  #         DeviceIndex: '0'
  #         DeleteOnTermination: true
  #         SubnetId: !Ref DMZ
  #     UserData:
  #       Fn::Base64: !Sub |
  #         #!/bin/bash
  #         /bin/echo '%password%' | /bin/passwd cloud_user --stdin
  #         yum update -y
  #         mkdir /home/cloud_user/.aws
  #         echo -e '[default]\nregion = us-east-1' > /home/cloud_user/.aws/config

  # The Amazon ECS instance role is automatically created for you in the console
  # first-run experience; however, you should manually attach the managed IAM
  # policy for container instances to allow Amazon ECS to add permissions for
  # future features and enhancements as they are introduced.
  # More info:
  # https://docs.aws.amazon.com/AmazonECS/latest/developerguide/instance_IAM_role.html
  EcsInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: "Allow"
          Principal:
            Service: "ec2.amazonaws.com"
          Action: "sts:AssumeRole"
      ManagedPolicyArns:
      - 'arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role'
      RoleName: ecsInstanceRole

  EcsInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Roles:
      - !Ref EcsInstanceRole
      InstanceProfileName: !Ref EcsInstanceRole

Outputs:

  # pubIpAddress1:
  #   Description: Public IP address of Bastion Host
  #   Value: !GetAtt BastionInstance.PublicIp

  # VPC:
  #   Description: A reference to the created VPC
  #   Value: !Ref VPC

  # DMZ:
  #   Description: A reference to the public subnet
  #   Value: !Ref DMZ

  EcsInstanceRole:
    Value: !GetAtt EcsInstanceRole.Arn
