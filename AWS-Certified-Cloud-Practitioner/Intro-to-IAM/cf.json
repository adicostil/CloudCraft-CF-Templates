{
    "AWSTemplateFormatVersion":"2010-09-09",
    "Description":"Cloudformation template that creates an EMR environment and downloads a sample webserver log file for LinuxAcademy hands-on lab",
    "Mappings":{
       "SubnetConfig":{
          "VPC":{
             "CIDR":"10.0.0.0/16"
          },
          "Public":{
             "CIDR":"10.0.0.0/24"
          },
          "Public1":{
             "CIDR":"10.0.1.0/24"
          },
          "Public2":{
             "CIDR":"10.0.2.0/24"
          }
       }
    },
    "Resources":{
       "VPC":{
          "Type":"AWS::EC2::VPC",
          "Properties":{
             "EnableDnsSupport":"true",
             "EnableDnsHostnames":"true",
             "CidrBlock":{
                "Fn::FindInMap":[
                   "SubnetConfig",
                   "VPC",
                   "CIDR"
                ]
             },
             "Tags":[
                {
                   "Key":"Application",
                   "Value":{
                      "Ref":"AWS::StackName"
                   }
                },
                {
                   "Key":"Network",
                   "Value":"Public"
                }
             ]
          }
       },
       "PublicSubnet":{
          "Type":"AWS::EC2::Subnet",
          "Properties":{
             "VpcId":{
                "Ref":"VPC"
             },
             "AvailabilityZone":{
                "Fn::Select":[
                   "0",
                   {
                      "Fn::GetAZs":""
                   }
                ]
             },
             "CidrBlock":{
                "Fn::FindInMap":[
                   "SubnetConfig",
                   "Public",
                   "CIDR"
                ]
             },
             "Tags":[
                {
                   "Key":"Application",
                   "Value":{
                      "Ref":"AWS::StackName"
                   }
                },
                {
                   "Key":"Network",
                   "Value":"Public"
                }
             ]
          }
       },
       "PublicSubnet1":{
          "Type":"AWS::EC2::Subnet",
          "Properties":{
             "VpcId":{
                "Ref":"VPC"
             },
             "AvailabilityZone":{
                "Fn::Select":[
                   "1",
                   {
                      "Fn::GetAZs":""
                   }
                ]
             },
             "CidrBlock":{
                "Fn::FindInMap":[
                   "SubnetConfig",
                   "Public1",
                   "CIDR"
                ]
             },
             "Tags":[
                {
                   "Key":"Application",
                   "Value":{
                      "Ref":"AWS::StackName"
                   }
                },
                {
                   "Key":"Network",
                   "Value":"Public"
                }
             ]
          }
       },
       "PublicSubnet2":{
          "Type":"AWS::EC2::Subnet",
          "Properties":{
             "VpcId":{
                "Ref":"VPC"
             },
             "AvailabilityZone":{
                "Fn::Select":[
                   "2",
                   {
                      "Fn::GetAZs":""
                   }
                ]
             },
             "CidrBlock":{
                "Fn::FindInMap":[
                   "SubnetConfig",
                   "Public2",
                   "CIDR"
                ]
             },
             "Tags":[
                {
                   "Key":"Application",
                   "Value":{
                      "Ref":"AWS::StackName"
                   }
                },
                {
                   "Key":"Network",
                   "Value":"Public"
                }
             ]
          }
       },
       "InternetGateway":{
          "Type":"AWS::EC2::InternetGateway",
          "Properties":{
             "Tags":[
                {
                   "Key":"Application",
                   "Value":{
                      "Ref":"AWS::StackName"
                   }
                },
                {
                   "Key":"Network",
                   "Value":"Public"
                }
             ]
          }
       },
       "GatewayToInternet":{
          "Type":"AWS::EC2::VPCGatewayAttachment",
          "Properties":{
             "VpcId":{
                "Ref":"VPC"
             },
             "InternetGatewayId":{
                "Ref":"InternetGateway"
             }
          }
       },
       "PublicRouteTable":{
          "Type":"AWS::EC2::RouteTable",
          "Properties":{
             "VpcId":{
                "Ref":"VPC"
             },
             "Tags":[
                {
                   "Key":"Application",
                   "Value":{
                      "Ref":"AWS::StackName"
                   }
                },
                {
                   "Key":"Network",
                   "Value":"Public"
                }
             ]
          }
       },
       "PublicRoute":{
          "Type":"AWS::EC2::Route",
          "DependsOn":"GatewayToInternet",
          "Properties":{
             "RouteTableId":{
                "Ref":"PublicRouteTable"
             },
             "DestinationCidrBlock":"0.0.0.0/0",
             "GatewayId":{
                "Ref":"InternetGateway"
             }
          }
       },
       "PublicSubnetRouteTableAssociation":{
          "Type":"AWS::EC2::SubnetRouteTableAssociation",
          "Properties":{
             "SubnetId":{
                "Ref":"PublicSubnet"
             },
             "RouteTableId":{
                "Ref":"PublicRouteTable"
             }
          }
       },
       "PublicSubnetRouteTableAssociation1":{
          "Type":"AWS::EC2::SubnetRouteTableAssociation",
          "Properties":{
             "SubnetId":{
                "Ref":"PublicSubnet1"
             },
             "RouteTableId":{
                "Ref":"PublicRouteTable"
             }
          }
       },
       "PublicSubnetRouteTableAssociation2":{
          "Type":"AWS::EC2::SubnetRouteTableAssociation",
          "Properties":{
             "SubnetId":{
                "Ref":"PublicSubnet2"
             },
             "RouteTableId":{
                "Ref":"PublicRouteTable"
             }
          }
       },
       "PublicNetworkAcl":{
          "Type":"AWS::EC2::NetworkAcl",
          "Properties":{
             "VpcId":{
                "Ref":"VPC"
             },
             "Tags":[
                {
                   "Key":"Application",
                   "Value":{
                      "Ref":"AWS::StackName"
                   }
                },
                {
                   "Key":"Network",
                   "Value":"Public"
                }
             ]
          }
       },
       "InboundHTTPPublicNetworkAclEntry":{
          "Type":"AWS::EC2::NetworkAclEntry",
          "Properties":{
             "NetworkAclId":{
                "Ref":"PublicNetworkAcl"
             },
             "RuleNumber":"100",
             "Protocol":"6",
             "RuleAction":"allow",
             "Egress":"false",
             "CidrBlock":"0.0.0.0/0",
             "PortRange":{
                "From":"80",
                "To":"80"
             }
          }
       },
       "InboundHTTPSPublicNetworkAclEntry":{
          "Type":"AWS::EC2::NetworkAclEntry",
          "Properties":{
             "NetworkAclId":{
                "Ref":"PublicNetworkAcl"
             },
             "RuleNumber":"101",
             "Protocol":"6",
             "RuleAction":"allow",
             "Egress":"false",
             "CidrBlock":"0.0.0.0/0",
             "PortRange":{
                "From":"443",
                "To":"443"
             }
          }
       },
       "InboundSSHPublicNetworkAclEntry":{
          "Type":"AWS::EC2::NetworkAclEntry",
          "Properties":{
             "NetworkAclId":{
                "Ref":"PublicNetworkAcl"
             },
             "RuleNumber":"102",
             "Protocol":"6",
             "RuleAction":"allow",
             "Egress":"false",
             "CidrBlock":"0.0.0.0/0",
             "PortRange":{
                "From":"22",
                "To":"22"
             }
          }
       },
       "InboundEmphemeralPublicNetworkAclEntry":{
          "Type":"AWS::EC2::NetworkAclEntry",
          "Properties":{
             "NetworkAclId":{
                "Ref":"PublicNetworkAcl"
             },
             "RuleNumber":"103",
             "Protocol":"6",
             "RuleAction":"allow",
             "Egress":"false",
             "CidrBlock":"0.0.0.0/0",
             "PortRange":{
                "From":"1024",
                "To":"65535"
             }
          }
       },
       "OutboundPublicNetworkAclEntry":{
          "Type":"AWS::EC2::NetworkAclEntry",
          "Properties":{
             "NetworkAclId":{
                "Ref":"PublicNetworkAcl"
             },
             "RuleNumber":"100",
             "Protocol":"6",
             "RuleAction":"allow",
             "Egress":"true",
             "CidrBlock":"0.0.0.0/0",
             "PortRange":{
                "From":"0",
                "To":"65535"
             }
          }
       },
       "PublicSubnetNetworkAclAssociation":{
          "Type":"AWS::EC2::SubnetNetworkAclAssociation",
          "Properties":{
             "SubnetId":{
                "Ref":"PublicSubnet"
             },
             "NetworkAclId":{
                "Ref":"PublicNetworkAcl"
             }
          }
       },
       "EC2SecurityGroup":{
          "Type":"AWS::EC2::SecurityGroup",
          "Properties":{
             "GroupDescription":"Enable access to the EC2 host",
             "VpcId":{
                "Ref":"VPC"
             }
          }
       },
       "SGBaseIngress":{
          "Type":"AWS::EC2::SecurityGroupIngress",
          "Properties":{
             "GroupId":{
                "Ref":"EC2SecurityGroup"
             },
             "IpProtocol":"tcp",
             "FromPort":"22",
             "ToPort":"22",
             "CidrIp" : "0.0.0.0/0"
          }
       },
         "Ec2Instance" : {
           "Type" : "AWS::EC2::Instance",
           "Properties" : {
               "ImageId" : "ami-1853ac65",
               "InstanceType" : "t2.micro",
                 "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
                 "#!/bin/bash\n",
                 "/bin/echo '%password%' | /bin/passwd cloud_user --stdin\n"
               ]]}},

              "NetworkInterfaces": [ {
                   "AssociatePublicIpAddress": "true",
                   "DeviceIndex": "0",
                    "PrivateIpAddress" : "10.0.2.100",
                   "GroupSet": [{ "Ref" : "EC2SecurityGroup" }],
                   "SubnetId": { "Ref" : "PublicSubnet2" }
               } ]
          }
      },
     "user1": {
       "Type": "AWS::IAM::User",
       "Properties": {
         "Path" : "/",
           "LoginProfile" : {
              "Password" : "123456"
          },
         "UserName": "user-1"
       }
     },
     "user2": {
       "Type": "AWS::IAM::User",
       "Properties": {
         "Path" : "/",
           "LoginProfile" : {
              "Password" : "123456"
          },
         "UserName": "user-2"
       }
     },
     "user3": {
       "Type": "AWS::IAM::User",
       "Properties": {
         "Path" : "/",
           "LoginProfile" : {
              "Password" : "123456"
          },
         "UserName": "user-3"
       }
     },
     "ec2support" : {
        "Type" : "AWS::IAM::Group",
        "Properties" : {
           "GroupName": "EC2-Support",
           "Path" : "/",
           "ManagedPolicyArns" : [ "arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess" ]
        }
     },
     "s3support" : {
        "Type" : "AWS::IAM::Group",
        "Properties" : {
           "GroupName" : "S3-Support",
           "Path" : "/",
           "ManagedPolicyArns" : [ "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess" ]
        }
     },
     "ec2admin" : {
        "Type" : "AWS::IAM::Group",
        "Properties" : {
           "GroupName" : "EC2-Admin",
           "Path" : "/",
           "Policies" : [ {
              "PolicyName" : "ec2-admin",
              "PolicyDocument" : {
                 "Version": "2012-10-17",
                 "Statement": [
                     {
                         "Effect": "Allow",
                         "Action": ["ec2:Describe*", "ec2:StartInstances","ec2:StopInstances" ],
                         "Resource": "*"
                     },
                     {
                         "Effect": "Allow",
                         "Action": "elasticloadbalancing:Describe*",
                         "Resource": "*"
                     },
                     {
                         "Effect": "Allow",
                         "Action": [
                             "cloudwatch:ListMetrics",
                             "cloudwatch:GetMetricStatistics",
                             "cloudwatch:Describe*"
                         ],
                         "Resource": "*"
                     },
                     {
                         "Effect": "Allow",
                         "Action": "autoscaling:Describe*",
                         "Resource": "*"
                     }
                 ]
             }
           } ]
        }
     }

     }
 }